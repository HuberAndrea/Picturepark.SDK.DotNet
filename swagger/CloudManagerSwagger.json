{
  "x-generator": "NSwag v11.5.1.0 (NJsonSchema v9.4.10.0)",
  "swagger": "2.0",
  "info": {
    "title": "Web API Swagger specification",
    "version": "1.0.0"
  },
  "schemes": [],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Create",
        "parameters": [
          {
            "name": "createRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfigurationItem"
            },
            "x-nullable": true
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Update",
        "parameters": [
          {
            "name": "updateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfigurationItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/{CustomerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Get",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfigurationItem"
            },
            "x-nullable": true
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            },
            "x-nullable": false
          }
        }
      }
    },
    "/Customer/Search": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_List",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSearchResult"
            },
            "x-nullable": true
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Search",
        "parameters": [
          {
            "name": "searchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSearchResult"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/{CustomerId}/Users": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetAllUsers",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/{CustomerId}/ExternalProvider": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_AddExternalProviders",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "addRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalProviderItem"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfigurationItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/{CustomerAlias}/Restore": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Restore",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/ShutdownAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_ShutdownAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/RestartAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_RestartAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/{ServiceName}/Restart": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_RestartService",
        "parameters": [
          {
            "type": "string",
            "name": "ServiceName",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/{ServiceName}/Shutdown": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_ShutdownService",
        "parameters": [
          {
            "type": "string",
            "name": "ServiceName",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/PingAllActiveNodes": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_PingAllActiveNodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/GetAllActiveNodes": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_GetAllActiveNodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NodeInfo"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Environment": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetAvailableEnvironmentUpdates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateInfo"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Environment/Version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetEnvironmentVersion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VersionInfo"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Environment/Reactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_ReactivateEnvironment",
        "parameters": [
          {
            "name": "reactivationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReactivationEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Environment/Deactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_DeactivateEnvironment",
        "parameters": [
          {
            "name": "deactivationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeactivationEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Environment/Update": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_UpdateEnvironment",
        "parameters": [
          {
            "name": "updateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Customers/{CustomerId}": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetAvailableCustomerUpdates",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateInfo"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Customers/Version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetCustomerVersions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerVersionInfo"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Customers/{CustomerId}/Version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetCustomerVersion",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerVersionInfo"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Customers/Reactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_ReactivateCustomers",
        "parameters": [
          {
            "name": "reactivationRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReactivationCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Customers/Deactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_DeactivateCustomers",
        "parameters": [
          {
            "name": "deactivationRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeactivationCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Customers/Update": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_UpdateCustomers",
        "parameters": [
          {
            "name": "updateRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Backup/Customer/Repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateRepository",
        "parameters": [
          {
            "name": "snapshotRepositoryCustomerCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryCustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepository"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Customer/Snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot",
        "parameters": [
          {
            "name": "snapshotCustomerCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Customer/Restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_RestoreSnapshot",
        "parameters": [
          {
            "name": "snapshotCustomerRestoreRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerRestoreRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRestore"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Environment/Repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateRepository2",
        "parameters": [
          {
            "name": "snapshotRepositoryEnvironmentCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryEnvironmentCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepository"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Environment/Snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot2",
        "parameters": [
          {
            "name": "snapshotEnvironmentCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotEnvironmentCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Environment/Restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_RestoreSnapshot2",
        "parameters": [
          {
            "name": "snapshotEnvironmentRestoreRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotEnvironmentRestoreRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRestore"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Customer/Snapshot/Search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Search",
        "parameters": [
          {
            "name": "snapshotCustomerSearchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerSearchResult"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/Snapshot/SearchRepositories": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchRepositories",
        "parameters": [
          {
            "name": "searchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryCustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/Clone": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CloneCustomer",
        "parameters": [
          {
            "name": "cloneRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerCloneRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Customer"
            },
            "x-nullable": true
          }
        }
      }
    }
  },
  "definitions": {
    "CustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "cacheRetentionTimeInMinutes",
        "useSsl",
        "elasticSearchNumberOfShards",
        "elasticSearchNumberOfReplicas",
        "rootSearchIndexNumberOfShards",
        "rootSearchIndexNumberOfReplicas",
        "indexedFieldThreshold"
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "storagePath": {
          "type": "string"
        },
        "cacheRetentionTimeInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useSsl": {
          "type": "boolean"
        },
        "cdnUrl": {
          "type": "string"
        },
        "supportContactEmailAddress": {
          "type": "string"
        },
        "externalProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalProviderItem"
          }
        },
        "identityServerProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityServerProvider"
          }
        },
        "serviceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerServiceProviderItem"
          }
        },
        "corsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "elasticSearchNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "elasticSearchNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "rootSearchIndexNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "rootSearchIndexNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "indexedFieldThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "noReplyEmailAddress": {
          "type": "string"
        },
        "languageConfiguration": {
          "$ref": "#/definitions/LanguageConfigurationItem"
        },
        "outputFormats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFormat"
          }
        },
        "businessProcessEngineConnectionString": {
          "type": "string"
        },
        "createTransferBusinessProcess": {
          "type": "string"
        }
      }
    },
    "ExternalProviderItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "providerName"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "providerName": {
          "$ref": "#/definitions/ExternalProviderName"
        },
        "applicationId": {
          "type": "string"
        },
        "applicationSecret": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OAuthServiceApi"
          }
        },
        "redirectUri": {
          "type": "string"
        }
      }
    },
    "ExternalProviderName": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Google",
        "Windows",
        "Dropbox",
        "Buffer",
        "Picturepark"
      ],
      "enum": [
        "Google",
        "Windows",
        "Dropbox",
        "Buffer",
        "Picturepark"
      ]
    },
    "OAuthServiceApi": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "oAuthServiceType"
      ],
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "oAuthServiceType": {
          "$ref": "#/definitions/OAuthServiceType"
        }
      }
    },
    "OAuthServiceType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Drive",
        "SocialMedia",
        "ContentStore"
      ],
      "enum": [
        "Drive",
        "SocialMedia",
        "ContentStore"
      ]
    },
    "IdentityServerProvider": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "CustomerServiceProviderItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAllowedMessage"
          }
        },
        "allowedCommands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAllowedCommand"
          }
        },
        "userRoleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "settings": {
          "type": "string"
        }
      }
    },
    "CustomerAllowedMessage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "CustomerAllowedCommand": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "LanguageConfigurationItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "systemLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadataLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultLanguage": {
          "type": "string"
        }
      }
    },
    "OutputFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "static",
        "system",
        "dynamic",
        "dataExtraction",
        "temporary",
        "render"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "static": {
          "type": "boolean"
        },
        "system": {
          "type": "boolean"
        },
        "dynamic": {
          "type": "boolean"
        },
        "dataExtraction": {
          "type": "boolean"
        },
        "temporary": {
          "type": "boolean"
        },
        "sourceOutputFormats": {
          "$ref": "#/definitions/SourceOutputFormats"
        },
        "render": {
          "type": "boolean"
        },
        "format": {
          "$ref": "#/definitions/FormatBase"
        }
      }
    },
    "SourceOutputFormats": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "image": {
          "type": "string"
        },
        "video": {
          "type": "string"
        },
        "document": {
          "type": "string"
        },
        "audio": {
          "type": "string"
        }
      }
    },
    "FormatBase": {
      "type": "object",
      "discriminator": "kind",
      "additionalProperties": false,
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "ImageFormatBase": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "colorTransformationIntent",
        "renderFirstFrameOnly",
        "keepClippingPath",
        "cloneExif",
        "cloneIptc",
        "cloneAdobeResources",
        "cloneXmp"
      ],
      "properties": {
        "colorProfile": {
          "$ref": "#/definitions/ColorProfile"
        },
        "colorTransformationIntent": {
          "$ref": "#/definitions/ColorTransformationIntent"
        },
        "horizontalResolution": {
          "type": "number",
          "format": "double"
        },
        "verticalResolution": {
          "type": "number",
          "format": "double"
        },
        "renderFirstFrameOnly": {
          "type": "boolean"
        },
        "keepClippingPath": {
          "type": "boolean"
        },
        "cloneExif": {
          "type": "boolean"
        },
        "cloneIptc": {
          "type": "boolean"
        },
        "cloneAdobeResources": {
          "type": "boolean"
        },
        "cloneXmp": {
          "type": "boolean"
        },
        "resizeAction": {
          "$ref": "#/definitions/ResizeAction"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageActionBase"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "ColorProfile": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AdobeRgb1998",
        "AppleRgb",
        "ColorMatchRgb",
        "EciRgbV1",
        "EciRgbV2",
        "Srgb",
        "SrgbColorSpaceProfile",
        "EuropeIsoCoatedFogra27",
        "EuroscaleCoated",
        "EuroscaleUncoated",
        "IsoCoated",
        "IsoCoatedEciV2",
        "JapanColor2001Coated",
        "JapanColor2001Uncoated",
        "JapanColor2002Newspaper",
        "JapanWebCoated",
        "UsSheetfedCoated",
        "UsSheetfedUncoated",
        "UsWebCoatedSwop",
        "UsWebUncoated",
        "IsoCoatedV2Grey1cBas",
        "IsoCoated300EciV2",
        "CoatedFogra27",
        "CoatedFogra39",
        "UncoatedFogra29",
        "WebCoatedFogra28",
        "WebCoatedSwop2006Grade3",
        "WebCoatedSwop2006Grade5",
        "Isonewspaper26v4",
        "Isonewspaper26v4Grey"
      ],
      "enum": [
        "AdobeRgb1998",
        "AppleRgb",
        "ColorMatchRgb",
        "EciRgbV1",
        "EciRgbV2",
        "Srgb",
        "SrgbColorSpaceProfile",
        "EuropeIsoCoatedFogra27",
        "EuroscaleCoated",
        "EuroscaleUncoated",
        "IsoCoated",
        "IsoCoatedEciV2",
        "JapanColor2001Coated",
        "JapanColor2001Uncoated",
        "JapanColor2002Newspaper",
        "JapanWebCoated",
        "UsSheetfedCoated",
        "UsSheetfedUncoated",
        "UsWebCoatedSwop",
        "UsWebUncoated",
        "IsoCoatedV2Grey1cBas",
        "IsoCoated300EciV2",
        "CoatedFogra27",
        "CoatedFogra39",
        "UncoatedFogra29",
        "WebCoatedFogra28",
        "WebCoatedSwop2006Grade3",
        "WebCoatedSwop2006Grade5",
        "Isonewspaper26v4",
        "Isonewspaper26v4Grey"
      ]
    },
    "ColorTransformationIntent": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "RelativeColorimetricBpc",
        "AbsoluteColorimetric",
        "Perceptual",
        "RelativeColorimetric",
        "Saturation"
      ],
      "enum": [
        "RelativeColorimetricBpc",
        "AbsoluteColorimetric",
        "Perceptual",
        "RelativeColorimetric",
        "Saturation"
      ]
    },
    "ResizeAction": {
      "type": "object",
      "description": "Does not implement the IImageAction interface. The ResizeAction is directly exposed within ImageFormat.",
      "additionalProperties": false,
      "required": [
        "width",
        "height",
        "resizeMode"
      ],
      "properties": {
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "resizeMode": {
          "$ref": "#/definitions/ResizeMode"
        }
      }
    },
    "ResizeMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Fit",
        "Shrink",
        "Resize"
      ],
      "enum": [
        "Fit",
        "Shrink",
        "Resize"
      ]
    },
    "ImageActionBase": {
      "type": "object",
      "discriminator": "kind",
      "additionalProperties": false,
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "AlphaHandlingAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "alphaHandling"
      ],
      "properties": {
        "alphaHandling": {
          "$ref": "#/definitions/AlphaHandling"
        },
        "replacementRgbColorHexCode": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "AlphaHandling": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "DiscardAlpha",
        "ReplaceAlpha",
        "ReplaceInvertedAlpha"
      ],
      "enum": [
        "DiscardAlpha",
        "ReplaceAlpha",
        "ReplaceInvertedAlpha"
      ]
    },
    "CropAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "x",
        "y",
        "width",
        "height"
      ],
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32"
        },
        "y": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "UnsharpenMaskAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount",
        "radius",
        "threshold"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "radius": {
          "type": "number",
          "format": "double"
        },
        "threshold": {
          "type": "number",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "WatermarkAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "opacity",
        "widthRatio",
        "heightRatio"
      ],
      "properties": {
        "watermarkFilePath": {
          "type": "string"
        },
        "watermarkText": {
          "type": "string"
        },
        "marginLeft": {
          "type": "integer",
          "format": "int32"
        },
        "marginTop": {
          "type": "integer",
          "format": "int32"
        },
        "marginRight": {
          "type": "integer",
          "format": "int32"
        },
        "marginBottom": {
          "type": "integer",
          "format": "int32"
        },
        "opacity": {
          "type": "number",
          "format": "double"
        },
        "widthRatio": {
          "type": "number",
          "format": "double"
        },
        "heightRatio": {
          "type": "number",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "OriginalFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "JpegFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "quality",
        "isProgressive",
        "chromaSubsamplingEnabled"
      ],
      "properties": {
        "quality": {
          "type": "integer",
          "format": "int32"
        },
        "isProgressive": {
          "type": "boolean"
        },
        "chromaSubsamplingEnabled": {
          "type": "boolean"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "PngFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "interlaced"
      ],
      "properties": {
        "interlaced": {
          "type": "boolean"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "TiffFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "alphaPremultiplied",
        "compressionType",
        "includeUnspecifiedTiffExtraChannels"
      ],
      "properties": {
        "alphaPremultiplied": {
          "type": "boolean"
        },
        "compressionType": {
          "$ref": "#/definitions/CompressionType"
        },
        "includeUnspecifiedTiffExtraChannels": {
          "type": "boolean"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "CompressionType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "Lzw",
        "Rle",
        "Zip"
      ],
      "enum": [
        "None",
        "Lzw",
        "Rle",
        "Zip"
      ]
    },
    "VideoFormatBase": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "Mp4VideoFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "preset"
      ],
      "properties": {
        "resizeAction": {
          "$ref": "#/definitions/ResizeAction2"
        },
        "audioCodec": {
          "description": "Gets or sets the encoding audio codec.",
          "$ref": "#/definitions/AudioFormatBase"
        },
        "preset": {
          "description": "Gets or sets the encoding codec preset.",
          "$ref": "#/definitions/Preset"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IVideoAction"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "ResizeAction2": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "width",
        "height",
        "resizeMode"
      ],
      "properties": {
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "resizeMode": {
          "$ref": "#/definitions/ResizeMode"
        }
      }
    },
    "AudioFormatBase": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "VideoPresetFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "videoPresetId"
      ],
      "properties": {
        "videoPresetId": {
          "type": "string",
          "description": "Id of Squeeze preset.",
          "format": "guid"
        },
        "customerId": {
          "type": "string"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "VideoSpriteFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "maxNumberOfSprites",
        "quality"
      ],
      "properties": {
        "spriteResizeAction": {
          "$ref": "#/definitions/ResizeAction2"
        },
        "maxNumberOfSprites": {
          "type": "integer",
          "format": "int32"
        },
        "quality": {
          "type": "integer",
          "format": "int32"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "VideoStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "positionInSeconds"
      ],
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "positionInSeconds": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "AacAudioFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "profile",
        "coder"
      ],
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "profile": {
          "description": "Gets or sets the encoding profile.",
          "$ref": "#/definitions/Profile"
        },
        "coder": {
          "description": "Gets or sets the encoding coder.",
          "$ref": "#/definitions/Coder"
        },
        "bitrate": {
          "type": "integer",
          "description": "Gets or sets the bitrate of the encoding.",
          "format": "int32"
        },
        "variableBitRate": {
          "type": "integer",
          "description": "Gets or sets the encoding variable bit rate (VBR) - 1 is lowest quality and 5 is highest quality.",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "Profile": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "aac_low",
        "mpeg2_aac_low",
        "aac_ltp",
        "aac_main"
      ],
      "enum": [
        "aac_low",
        "mpeg2_aac_low",
        "aac_ltp",
        "aac_main"
      ]
    },
    "Coder": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "twoloop",
        "anmr",
        "fast"
      ],
      "enum": [
        "twoloop",
        "anmr",
        "fast"
      ]
    },
    "AudioPresetFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "audioPresetId"
      ],
      "properties": {
        "audioPresetId": {
          "type": "string",
          "description": "Id of Squeeze preset.",
          "format": "guid"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "AudioStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "Mp3AudioFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bitrate": {
          "type": "integer",
          "description": "Gets or sets the encoding bitrate.",
          "format": "int32"
        },
        "quality": {
          "type": "integer",
          "description": "Gets or sets the encoding quality.\nValues can be set it range of 0 to 9, where a lower value is a higher quality.",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "DocumentFormatBase": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "DocumentStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentFormatBase"
        }
      ]
    },
    "PdfFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "jpegQuality",
        "fastWebView",
        "reduceFileSize",
        "extractFullText"
      ],
      "properties": {
        "jpegQuality": {
          "type": "integer",
          "description": "JpegQuality parameter value must be between 0 and 100.",
          "format": "int32"
        },
        "fastWebView": {
          "type": "boolean"
        },
        "reduceFileSize": {
          "type": "boolean"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extractFullText": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentFormatBase"
        }
      ]
    },
    "Preset": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "ultrafast",
        "superfast",
        "veryfast",
        "faster",
        "fast",
        "medium",
        "slow",
        "slower"
      ],
      "enum": [
        "ultrafast",
        "superfast",
        "veryfast",
        "faster",
        "fast",
        "medium",
        "slow",
        "slower"
      ]
    },
    "IVideoAction": {
      "type": "object",
      "additionalProperties": false
    },
    "CustomerConfigurationItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "useSsl",
        "elasticSearchNumberOfShards",
        "elasticSearchNumberOfReplicas",
        "rootSearchIndexNumberOfShards",
        "rootSearchIndexNumberOfReplicas",
        "indexedFieldThreshold",
        "redisDatabaseIndex",
        "lifeCycle"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "lifelineId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mainCatalog": {
          "type": "string"
        },
        "metadataCatalog": {
          "type": "string"
        },
        "statisticsCatalog": {
          "type": "string"
        },
        "documentHistoryCatalog": {
          "type": "string"
        },
        "liveStreamCatalog": {
          "type": "string"
        },
        "cacheCatalog": {
          "type": "string"
        },
        "watermarkPath": {
          "type": "string"
        },
        "storagePath": {
          "type": "string"
        },
        "contractVersion": {
          "type": "string"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useSsl": {
          "type": "boolean"
        },
        "externalProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalProviderItem"
          }
        },
        "serviceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerServiceProviderItem"
          }
        },
        "supportContactEmailAddress": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "cdnUrl": {
          "type": "string"
        },
        "elasticSearchNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "elasticSearchNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "rootSearchIndexNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "rootSearchIndexNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "indexedFieldThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "corsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "noReplyEmailAddress": {
          "type": "string"
        },
        "languageConfiguration": {
          "$ref": "#/definitions/LanguageConfigurationItem"
        },
        "businessProcessEngineConnectionString": {
          "type": "string"
        },
        "createTransferBusinessProcess": {
          "type": "string"
        },
        "redisDatabaseIndex": {
          "type": "integer",
          "format": "int32"
        },
        "lifeCycle": {
          "$ref": "#/definitions/LifeCycle"
        },
        "deactivationMessage": {
          "$ref": "#/definitions/TranslatedStringDictionary"
        }
      }
    },
    "LifeCycle": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "Active",
        "Inactive",
        "Deleted"
      ],
      "enum": [
        "Draft",
        "Active",
        "Inactive",
        "Deleted"
      ]
    },
    "TranslatedStringDictionary": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ]
    },
    "CustomerUpdateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lifeCycle",
        "backupEnabled",
        "cacheRetentionTimeInMinutes",
        "useSsl"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lifeCycle": {
          "$ref": "#/definitions/LifeCycle"
        },
        "deactivationMessage": {
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "backupEnabled": {
          "type": "boolean"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cacheRetentionTimeInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "useSsl": {
          "type": "boolean"
        },
        "cdnUrl": {
          "type": "string"
        },
        "supportContactEmailAddress": {
          "type": "string"
        },
        "corsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "noReplyEmailAddress": {
          "type": "string"
        },
        "indexedFieldThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CustomerSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BaseResultOfCustomer"
        }
      ]
    },
    "BaseResultOfCustomer": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "totalResults"
      ],
      "properties": {
        "totalResults": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          }
        },
        "pageToken": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lifeCycle"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "deactivationComment": {
          "type": "string"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainCatalog": {
          "type": "string"
        },
        "contractVersion": {
          "type": "string"
        },
        "storagePath": {
          "type": "string"
        },
        "watermarkPath": {
          "type": "string"
        },
        "lifeCycle": {
          "$ref": "#/definitions/LifeCycle"
        }
      }
    },
    "User": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "userRoleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserItem"
        }
      ]
    },
    "UserItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "CustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "start",
        "limit"
      ],
      "properties": {
        "searchString": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortInfo"
          }
        },
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "filter": {
          "$ref": "#/definitions/FilterBase"
        }
      }
    },
    "SortInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "direction"
      ],
      "properties": {
        "field": {
          "type": "string"
        },
        "direction": {
          "$ref": "#/definitions/SortDirection"
        }
      }
    },
    "SortDirection": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Asc",
        "Desc"
      ],
      "enum": [
        "Asc",
        "Desc"
      ]
    },
    "FilterBase": {
      "type": "object",
      "discriminator": "kind",
      "description": "The FilterBase is the base class for all filters.",
      "additionalProperties": false,
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "AndFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "filters": {
          "type": "array",
          "description": "Accepts all filters.",
          "items": {
            "$ref": "#/definitions/FilterBase"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "OrFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "filters": {
          "type": "array",
          "description": "Accepts all filters.",
          "items": {
            "$ref": "#/definitions/FilterBase"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "NotFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "filter": {
          "description": "Limits the result set.",
          "$ref": "#/definitions/FilterBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "DateRangeFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "range": {
          "description": "The date range. Supported pattern: now(+-)(int)(YMDHm).",
          "$ref": "#/definitions/DateRange"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "DateRange": {
      "type": "object",
      "description": "The date range class used in aggregators and filters.",
      "additionalProperties": false,
      "properties": {
        "names": {
          "description": "Tranlsated range names.",
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "from": {
          "type": "string",
          "description": "The from value can be a datetime string or a pattern now(+-)(int)(YMDHm)."
        },
        "to": {
          "type": "string",
          "description": "The to value can be a datetime string or a pattern now(+-)(int)(YMDHm)."
        }
      }
    },
    "ExistsFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "GeoBoundingBoxFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "topLeft": {
          "description": "The top left longitude/latitude configuration.",
          "$ref": "#/definitions/GeoLocation"
        },
        "bottomRight": {
          "description": "The bottom right longitude/latitude configuration.",
          "$ref": "#/definitions/GeoLocation"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "GeoLocation": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lat",
        "lon"
      ],
      "properties": {
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GeoDistanceFilter": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "distance"
      ],
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "location": {
          "description": "The longitude/latitude configuration for the point of origin.",
          "$ref": "#/definitions/GeoLocation"
        },
        "distance": {
          "type": "number",
          "description": "The range distance in meters.",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "GeoDistanceRangeFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "location": {
          "description": "The longitude/latitude configuration for the point of origin.",
          "$ref": "#/definitions/GeoLocation"
        },
        "range": {
          "description": "The numeric range.",
          "$ref": "#/definitions/NumericRange"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "NumericRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "names": {
          "description": "Tranlsated range names.",
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "from": {
          "type": "number",
          "description": "The from value.",
          "format": "double"
        },
        "to": {
          "type": "number",
          "description": "The to value.",
          "format": "double"
        }
      }
    },
    "NestedFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string",
          "description": "The path pointing to the nested object."
        },
        "filter": {
          "description": "Limits the result set.",
          "$ref": "#/definitions/FilterBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "NumericRangeFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "range": {
          "description": "The numeric range with from and to properties.",
          "$ref": "#/definitions/NumericRange"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "PrefixFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "prefix": {
          "type": "string",
          "description": "The prefix term to filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "TermFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "term": {
          "type": "string",
          "description": "The term to filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "TermsFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "terms": {
          "type": "array",
          "description": "A list of OR combined terms.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "AggregationFilter": {
      "type": "object",
      "description": "An AggregationFilter is provided with each aggregated value. When selecting the aggregated value the aggregation filter is added to the search query and returns doucments meeting the aggregation condition.",
      "additionalProperties": false,
      "properties": {
        "aggregationName": {
          "type": "string",
          "description": "The name of the aggregation this filter is connected to."
        },
        "filter": {
          "description": "The aggregation filter property. Available filters are TermFilter, DateRangeFilter, NumericRangeFilter and GeoDistanceRangeFilter.",
          "$ref": "#/definitions/FilterBase"
        },
        "temporaryAggregatorRequestId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "ChildFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "childType": {
          "type": "string",
          "description": "The elastic search index type to filter as a child."
        },
        "filter": {
          "description": "The filter to apply on the child entity. It accepts all filters.",
          "$ref": "#/definitions/FilterBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "ParentFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "parentType": {
          "type": "string",
          "description": "The elastic search index type to filter as a parent."
        },
        "filter": {
          "description": "The filter to apply on the child entity. It accepts all filters.",
          "$ref": "#/definitions/FilterBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "NodeInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lastResponseTime"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "lastResponseTime": {
          "type": "string",
          "format": "date-time"
        },
        "serviceName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "versionInfo": {
          "type": "string"
        },
        "release": {
          "type": "string"
        },
        "logLevel": {
          "type": "string"
        }
      }
    },
    "UpdateInfo": {
      "type": "object",
      "description": "The UpdateInfoViewItem is the view item for update commands.",
      "additionalProperties": false,
      "required": [
        "creationDate"
      ],
      "properties": {
        "updateVersion": {
          "type": "string",
          "description": "The version of the update command."
        },
        "objectStoreVersion": {
          "type": "string",
          "description": "The version of the object store (elastic search) at the time of the update command creation."
        },
        "creationDate": {
          "type": "string",
          "description": "The creation date of the update command.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "The description of the update command."
        },
        "creator": {
          "type": "string",
          "description": "The creator of the update command."
        }
      }
    },
    "VersionInfo": {
      "type": "object",
      "description": "The version view item for the environment.",
      "additionalProperties": false,
      "properties": {
        "fileVersion": {
          "type": "string",
          "description": "The manual file version of Picturepark.Contract.dll."
        },
        "fileProductVersion": {
          "type": "string",
          "description": "The GitVersionTask generated file product version of Picturepark.Configuration.dll."
        },
        "contractVersion": {
          "type": "string",
          "description": "The current contract version stored in CustomerDoc / EnvironmentDoc."
        },
        "release": {
          "type": "string",
          "description": "The bamboo release version. Only provided on bamboo deployments."
        }
      }
    },
    "ReactivationEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false
    },
    "DeactivationEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "deactivationMessage": {
          "description": "Language specific deactivation messages.",
          "$ref": "#/definitions/TranslatedStringDictionary"
        }
      }
    },
    "UpdateEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the environments's contract version will be raised to the highest available update version."
        }
      }
    },
    "CustomerVersionInfo": {
      "type": "object",
      "description": "The version view item for the customer.",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string",
          "description": "The customer id."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VersionInfo"
        }
      ]
    },
    "ReactivationCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string",
          "description": "The customer id."
        }
      }
    },
    "DeactivationCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string",
          "description": "The customer id."
        },
        "deactivationMessage": {
          "description": "Language specific deactivation messages.",
          "$ref": "#/definitions/TranslatedStringDictionary"
        }
      }
    },
    "UpdateCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the customer's contract version will be raised to the highest available update version."
        },
        "customerId": {
          "type": "string",
          "description": "The customer id."
        }
      }
    },
    "SnapshotRepositoryCustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerAlias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotRepositoryBaseCreateRequest"
        }
      ]
    },
    "SnapshotRepositoryBaseCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "repositoryName": {
          "type": "string"
        }
      }
    },
    "SnapshotRepository": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "entityType"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/BackupEntityType"
        }
      }
    },
    "BackupEntityType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Enviroment",
        "Customer"
      ],
      "enum": [
        "Enviroment",
        "Customer"
      ]
    },
    "SnapshotCustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerAlias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseCreateRequest"
        }
      ]
    },
    "SnapshotBaseCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reason",
        "timestamp"
      ],
      "properties": {
        "snapshotName": {
          "type": "string",
          "description": "The SnapshotName. Must be unique.\nThe name usually will be enriched with Reason, ContractVersion and DateTime information."
        },
        "repositoryName": {
          "type": "string",
          "description": "The Repository in which the snapshot will be created."
        },
        "indices": {
          "type": "array",
          "description": "The Indices being part of the snapshot.",
          "items": {
            "type": "string"
          }
        },
        "reason": {
          "description": "The snapshot backup reason will be added to the snapshot name.",
          "$ref": "#/definitions/BackupReason"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp when creating the requst (utc). If there is a more recent snapshot in the repository, it will keep/return the latest one,\ninstead of creating a new one.",
          "format": "date-time"
        }
      }
    },
    "BackupReason": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Custom",
        "Update",
        "Deletion"
      ],
      "enum": [
        "Custom",
        "Update",
        "Deletion"
      ]
    },
    "Snapshot": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "durationInMilliseconds",
        "endTime",
        "endTimeInMilliseconds",
        "startTime",
        "startTimeInMilliseconds",
        "entityType",
        "restoreDate"
      ],
      "properties": {
        "durationInMilliseconds": {
          "type": "integer",
          "description": "The snapshot creation DurationInMilliseconds.",
          "format": "int64"
        },
        "endTime": {
          "type": "string",
          "description": "The snapshot EndTime.",
          "format": "date-time"
        },
        "endTimeInMilliseconds": {
          "type": "integer",
          "description": "The snapshot EndTimeInMilliseconds.",
          "format": "int64"
        },
        "failures": {
          "type": "array",
          "description": "The snapshot elastic search shard Falures.",
          "items": {
            "$ref": "#/definitions/SnapshotShardFailure"
          }
        },
        "indices": {
          "type": "array",
          "description": "The snapshot Indices.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "The snapshot Name."
        },
        "repositoryName": {
          "type": "string",
          "description": "The repository name."
        },
        "startTime": {
          "type": "string",
          "description": "The snapshot StartTime.",
          "format": "date-time"
        },
        "startTimeInMilliseconds": {
          "type": "integer",
          "description": "The snapshot StartTimeInMilliseconds.",
          "format": "int64"
        },
        "state": {
          "type": "string",
          "description": "The snapshot State."
        },
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/BackupEntityType"
        },
        "restoreDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SnapshotShardFailure": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "index": {
          "type": "string",
          "description": "The Index having the shard failure."
        },
        "nodeId": {
          "type": "string",
          "description": "The elastic search NodeId."
        },
        "reason": {
          "type": "string",
          "description": "The elastic serach shard failure Reason."
        },
        "shardId": {
          "type": "string",
          "description": "The failing elastic search ShardId."
        },
        "status": {
          "type": "string",
          "description": "The snapshot failure status."
        }
      }
    },
    "SnapshotCustomerRestoreRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerAlias": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseRestoreRequest"
        }
      ]
    },
    "SnapshotBaseRestoreRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "snapshotName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "indices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SnapshotRestore": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "restoreDate"
      ],
      "properties": {
        "restoreDate": {
          "type": "string",
          "format": "date-time"
        },
        "repositoryName": {
          "type": "string"
        },
        "snapshotName": {
          "type": "string"
        },
        "indices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SnapshotRepositoryEnvironmentCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotRepositoryBaseCreateRequest"
        }
      ]
    },
    "SnapshotEnvironmentCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseCreateRequest"
        }
      ]
    },
    "SnapshotEnvironmentRestoreRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseRestoreRequest"
        }
      ]
    },
    "SnapshotCustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "start",
        "limit"
      ],
      "properties": {
        "searchString": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortInfo"
          }
        },
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "repositoryNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customerAlias": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        }
      }
    },
    "SnapshotCustomerSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "elapsedMilliseconds"
      ],
      "properties": {
        "elapsedMilliseconds": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseResultOfSnapshot"
        }
      ]
    },
    "BaseResultOfSnapshot": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "totalResults"
      ],
      "properties": {
        "totalResults": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "pageToken": {
          "type": "string"
        }
      }
    },
    "SnapshotRepositoryCustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        },
        "customerAlias": {
          "type": "string"
        }
      }
    },
    "SnapshotCustomerCloneRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "snapshotName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "sourceCustomerAlias": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "customerAlias": {
          "type": "string"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "corsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "storagePath": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {}
}