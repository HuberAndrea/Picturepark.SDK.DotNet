{
  "swagger": "2.0",
  "info": {
    "title": "Web API Swagger specification",
    "version": "1.0.0"
  },
  "schemes": [],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Create",
        "parameters": [
          {
            "name": "createRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfigurationItem"
            },
            "x-nullable": true
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Update",
        "parameters": [
          {
            "name": "updateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfigurationItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/{CustomerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Get",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfigurationItem"
            },
            "x-nullable": true
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            },
            "x-nullable": false
          }
        }
      }
    },
    "/Customer/Search": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_List",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSearchResult"
            },
            "x-nullable": true
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Search",
        "parameters": [
          {
            "name": "searchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSearchResult"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/{CustomerId}/Users": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetAllUsers",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserViewItem"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/{CustomerId}/ExternalProvider": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_AddExternalProviders",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "addRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalProviderItem"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfigurationItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Customer/{CustomerAlias}/Restore": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Restore",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/ShutdownAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_ShutdownAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/RestartAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_RestartAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/{ServiceName}/Restart": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_RestartService",
        "parameters": [
          {
            "type": "string",
            "name": "ServiceName",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/{ServiceName}/Shutdown": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_ShutdownService",
        "parameters": [
          {
            "type": "string",
            "name": "ServiceName",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/PingAllActiveNodes": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_PingAllActiveNodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Services/GetAllActiveNodes": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_GetAllActiveNodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NodeInfoDoc"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Environment": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetAvailableEnvironmentUpdates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateInfoViewItem"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Environment/Version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetEnvironmentVersion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VersionInfoViewItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Environment/Reactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_ReactivateEnvironment",
        "parameters": [
          {
            "name": "reactivationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReactivationEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Environment/Deactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_DeactivateEnvironment",
        "parameters": [
          {
            "name": "deactivationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeactivationEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Environment/Update": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_UpdateEnvironment",
        "parameters": [
          {
            "name": "updateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Customers/{CustomerId}": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetAvailableCustomerUpdates",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateInfoViewItem"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Customers/Version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetCustomerVersions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerVersionInfoViewItem"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Customers/{CustomerId}/Version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetCustomerVersion",
        "parameters": [
          {
            "type": "string",
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerVersionInfoViewItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Updates/Customers/Reactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_ReactivateCustomers",
        "parameters": [
          {
            "name": "reactivationRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReactivationCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Customers/Deactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_DeactivateCustomers",
        "parameters": [
          {
            "name": "deactivationRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeactivationCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Updates/Customers/Update": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_UpdateCustomers",
        "parameters": [
          {
            "name": "updateRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Backup/Customer/Repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateRepository",
        "parameters": [
          {
            "name": "snapshotRepositoryCustomerCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryCustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryViewItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Customer/Snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot",
        "parameters": [
          {
            "name": "snapshotCustomerCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotViewItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Customer/Restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_RestoreSnapshot",
        "parameters": [
          {
            "name": "snapshotCustomerRestoreRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerRestoreRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRestoreViewItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Environment/Repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateRepository2",
        "parameters": [
          {
            "name": "snapshotRepositoryEnvironmentCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryEnvironmentCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryViewItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Environment/Snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot2",
        "parameters": [
          {
            "name": "snapshotEnvironmentCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotEnvironmentCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotViewItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Environment/Restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_RestoreSnapshot2",
        "parameters": [
          {
            "name": "snapshotEnvironmentRestoreRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotEnvironmentRestoreRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRestoreViewItem"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup/Customer/Snapshot/Search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Search",
        "parameters": [
          {
            "name": "snapshotCustomerSearchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerSearchResult"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/Backup//Customer/Snapshot/SearchRepositories": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchRepositories",
        "parameters": [
          {
            "name": "searchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryCustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          }
        }
      }
    }
  },
  "definitions": {
    "CustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "CacheRetentionTimeInMinutes",
        "UseSsl",
        "ElasticSearchNumberOfShards",
        "ElasticSearchNumberOfReplicas",
        "RootSearchIndexNumberOfShards",
        "RootSearchIndexNumberOfReplicas"
      ],
      "properties": {
        "Alias": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Prefix": {
          "type": "string"
        },
        "BaseUrl": {
          "type": "string"
        },
        "StoragePath": {
          "type": "string"
        },
        "WatermarkPath": {
          "type": "string"
        },
        "CacheRetentionTimeInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "CustomerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "UseSsl": {
          "type": "boolean"
        },
        "CDNUrl": {
          "type": "string"
        },
        "SupportContactEmailAddress": {
          "type": "string"
        },
        "ExternalProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalProviderItem"
          }
        },
        "ServiceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerServiceProviderItem"
          }
        },
        "CorsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ElasticSearchNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "ElasticSearchNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "RootSearchIndexNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "RootSearchIndexNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "NoReplyEmailAddress": {
          "type": "string"
        },
        "LanguageConfiguration": {
          "$ref": "#/definitions/LanguageConfigurationItem"
        },
        "OutputFormats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFormatDoc"
          }
        },
        "BusinessProcessEngineConnectionString": {
          "type": "string"
        },
        "CreateTransferBusinessProcess": {
          "type": "string"
        }
      }
    },
    "ExternalProviderItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ProviderName"
      ],
      "properties": {
        "Id": {
          "type": "string"
        },
        "ProviderName": {
          "$ref": "#/definitions/ExternalProviderName"
        },
        "ApplicationId": {
          "type": "string"
        },
        "ApplicationSecret": {
          "type": "string"
        },
        "Services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OAuthServiceApi"
          }
        },
        "RedirectUri": {
          "type": "string"
        }
      }
    },
    "ExternalProviderName": {
      "type": "string",
      "x-enumNames": [
        "Google",
        "Windows",
        "Dropbox",
        "Buffer",
        "Picturepark"
      ],
      "enum": [
        "Google",
        "Windows",
        "Dropbox",
        "Buffer",
        "Picturepark"
      ],
      "description": ""
    },
    "OAuthServiceApi": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "OAuthServiceType"
      ],
      "properties": {
        "Scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OAuthServiceType": {
          "$ref": "#/definitions/OAuthServiceType"
        }
      }
    },
    "OAuthServiceType": {
      "type": "string",
      "x-enumNames": [
        "Drive",
        "SocialMedia",
        "ContentStore"
      ],
      "enum": [
        "Drive",
        "SocialMedia",
        "ContentStore"
      ],
      "description": ""
    },
    "CustomerServiceProviderItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Id": {
          "type": "string"
        },
        "Scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AllowedMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAllowedMessage"
          }
        },
        "AllowedCommands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAllowedCommand"
          }
        },
        "UserRoleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Settings": {
          "type": "string"
        }
      }
    },
    "CustomerAllowedMessage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string"
        },
        "Target": {
          "type": "string"
        }
      }
    },
    "CustomerAllowedCommand": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string"
        }
      }
    },
    "LanguageConfigurationItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SystemLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of languages serving as system languages."
        },
        "MetadataLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of languages serving as metadata languages."
        },
        "DefaultLanguage": {
          "type": "string",
          "description": "The default language. Not the be confused with the metadata fallback language x-default."
        }
      },
      "description": "The customer's language configuration."
    },
    "OutputFormatDoc": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Static",
        "System",
        "Dynamic",
        "DataExtraction",
        "Temporary",
        "Render"
      ],
      "properties": {
        "Static": {
          "type": "boolean"
        },
        "System": {
          "type": "boolean"
        },
        "Dynamic": {
          "type": "boolean"
        },
        "DataExtraction": {
          "type": "boolean"
        },
        "Temporary": {
          "type": "boolean"
        },
        "SourceOutputFormats": {
          "$ref": "#/definitions/SourceOutputFormats"
        },
        "Render": {
          "type": "boolean"
        },
        "Format": {
          "$ref": "#/definitions/FormatBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseDoc"
        }
      ]
    },
    "SourceOutputFormats": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Image": {
          "type": "string"
        },
        "Video": {
          "type": "string"
        },
        "Document": {
          "type": "string"
        },
        "Audio": {
          "type": "string"
        }
      }
    },
    "FormatBase": {
      "type": "object",
      "discriminator": "Kind",
      "additionalProperties": false,
      "required": [
        "Kind"
      ],
      "properties": {
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Kind": {
          "type": "string"
        }
      }
    },
    "ImageFormatBase": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ColorTransformationIntent",
        "RenderFirstFrameOnly",
        "KeepClippingPath",
        "CloneExif",
        "CloneIptc",
        "CloneAdobeResources",
        "CloneXmp"
      ],
      "properties": {
        "ColorProfile": {
          "$ref": "#/definitions/ColorProfile"
        },
        "ColorTransformationIntent": {
          "$ref": "#/definitions/ColorTransformationIntent"
        },
        "HorizontalResolution": {
          "type": "number",
          "format": "double"
        },
        "VerticalResolution": {
          "type": "number",
          "format": "double"
        },
        "RenderFirstFrameOnly": {
          "type": "boolean"
        },
        "KeepClippingPath": {
          "type": "boolean"
        },
        "CloneExif": {
          "type": "boolean"
        },
        "CloneIptc": {
          "type": "boolean"
        },
        "CloneAdobeResources": {
          "type": "boolean"
        },
        "CloneXmp": {
          "type": "boolean"
        },
        "ResizeAction": {
          "$ref": "#/definitions/ResizeAction"
        },
        "Actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageActionBase"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "ColorProfile": {
      "type": "string",
      "x-enumNames": [
        "AdobeRgb1998",
        "AppleRgb",
        "ColorMatchRgb",
        "EciRgbV1",
        "EciRgbV2",
        "Srgb",
        "SrgbColorSpaceProfile",
        "EuropeIsoCoatedFogra27",
        "EuroscaleCoated",
        "EuroscaleUncoated",
        "IsoCoated",
        "IsoCoatedEciV2",
        "JapanColor2001Coated",
        "JapanColor2001Uncoated",
        "JapanColor2002Newspaper",
        "JapanWebCoated",
        "UsSheetfedCoated",
        "UsSheetfedUncoated",
        "UsWebCoatedSwop",
        "UsWebUncoated",
        "IsoCoatedV2Grey1cBas",
        "IsoCoated300EciV2",
        "CoatedFogra27",
        "CoatedFogra39",
        "UncoatedFogra29",
        "WebCoatedFogra28",
        "WebCoatedSwop2006Grade3",
        "WebCoatedSwop2006Grade5",
        "Isonewspaper26v4",
        "Isonewspaper26v4Grey"
      ],
      "enum": [
        "AdobeRgb1998",
        "AppleRgb",
        "ColorMatchRgb",
        "EciRgbV1",
        "EciRgbV2",
        "Srgb",
        "SrgbColorSpaceProfile",
        "EuropeIsoCoatedFogra27",
        "EuroscaleCoated",
        "EuroscaleUncoated",
        "IsoCoated",
        "IsoCoatedEciV2",
        "JapanColor2001Coated",
        "JapanColor2001Uncoated",
        "JapanColor2002Newspaper",
        "JapanWebCoated",
        "UsSheetfedCoated",
        "UsSheetfedUncoated",
        "UsWebCoatedSwop",
        "UsWebUncoated",
        "IsoCoatedV2Grey1cBas",
        "IsoCoated300EciV2",
        "CoatedFogra27",
        "CoatedFogra39",
        "UncoatedFogra29",
        "WebCoatedFogra28",
        "WebCoatedSwop2006Grade3",
        "WebCoatedSwop2006Grade5",
        "Isonewspaper26v4",
        "Isonewspaper26v4Grey"
      ],
      "description": ""
    },
    "ColorTransformationIntent": {
      "type": "string",
      "x-enumNames": [
        "RelativeColorimetricBpc",
        "AbsoluteColorimetric",
        "Perceptual",
        "RelativeColorimetric",
        "Saturation"
      ],
      "enum": [
        "RelativeColorimetricBpc",
        "AbsoluteColorimetric",
        "Perceptual",
        "RelativeColorimetric",
        "Saturation"
      ],
      "description": ""
    },
    "ResizeAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Width",
        "Height",
        "ResizeMode"
      ],
      "properties": {
        "Width": {
          "type": "integer",
          "format": "int32"
        },
        "Height": {
          "type": "integer",
          "format": "int32"
        },
        "ResizeMode": {
          "$ref": "#/definitions/ResizeMode"
        }
      },
      "description": "Does not implement the IImageAction interface. The ResizeAction is directly exposed within ImageFormat."
    },
    "ResizeMode": {
      "type": "string",
      "x-enumNames": [
        "Fit",
        "Shrink",
        "Resize"
      ],
      "enum": [
        "Fit",
        "Shrink",
        "Resize"
      ],
      "description": ""
    },
    "ImageActionBase": {
      "type": "object",
      "discriminator": "Kind",
      "additionalProperties": false,
      "required": [
        "Kind"
      ],
      "properties": {
        "Kind": {
          "type": "string"
        }
      }
    },
    "AlphaHandlingAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "AlphaHandling"
      ],
      "properties": {
        "AlphaHandling": {
          "$ref": "#/definitions/AlphaHandling"
        },
        "ReplacementRgbColorHexCode": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "AlphaHandling": {
      "type": "string",
      "x-enumNames": [
        "DiscardAlpha",
        "ReplaceAlpha",
        "ReplaceInvertedAlpha"
      ],
      "enum": [
        "DiscardAlpha",
        "ReplaceAlpha",
        "ReplaceInvertedAlpha"
      ],
      "description": ""
    },
    "CropAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "X",
        "Y",
        "Width",
        "Height"
      ],
      "properties": {
        "X": {
          "type": "integer",
          "format": "int32"
        },
        "Y": {
          "type": "integer",
          "format": "int32"
        },
        "Width": {
          "type": "integer",
          "format": "int32"
        },
        "Height": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "UnsharpenMaskAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Amount",
        "Radius",
        "Threshold"
      ],
      "properties": {
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Radius": {
          "type": "number",
          "format": "double"
        },
        "Threshold": {
          "type": "number",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "WatermarkAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Opacity",
        "WidthRatio",
        "HeightRatio"
      ],
      "properties": {
        "WatermarkFilePath": {
          "type": "string"
        },
        "WatermarkText": {
          "type": "string"
        },
        "MarginLeft": {
          "type": "integer",
          "format": "int32"
        },
        "MarginTop": {
          "type": "integer",
          "format": "int32"
        },
        "MarginRight": {
          "type": "integer",
          "format": "int32"
        },
        "MarginBottom": {
          "type": "integer",
          "format": "int32"
        },
        "Opacity": {
          "type": "number",
          "format": "double"
        },
        "WidthRatio": {
          "type": "number",
          "format": "double"
        },
        "HeightRatio": {
          "type": "number",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "OriginalFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "JpegFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Quality",
        "IsProgressive",
        "ChromaSubsamplingEnabled"
      ],
      "properties": {
        "Quality": {
          "type": "integer",
          "format": "int32"
        },
        "IsProgressive": {
          "type": "boolean"
        },
        "ChromaSubsamplingEnabled": {
          "type": "boolean"
        },
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "PngFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Interlaced"
      ],
      "properties": {
        "Interlaced": {
          "type": "boolean"
        },
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "TiffFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "AlphaPremultiplied",
        "CompressionType",
        "IncludeUnspecifiedTiffExtraChannels"
      ],
      "properties": {
        "AlphaPremultiplied": {
          "type": "boolean"
        },
        "CompressionType": {
          "$ref": "#/definitions/CompressionType"
        },
        "IncludeUnspecifiedTiffExtraChannels": {
          "type": "boolean"
        },
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "CompressionType": {
      "type": "string",
      "x-enumNames": [
        "None",
        "Lzw",
        "Rle",
        "Zip"
      ],
      "enum": [
        "None",
        "Lzw",
        "Rle",
        "Zip"
      ],
      "description": ""
    },
    "VideoFormatBase": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "Mp4VideoFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Preset"
      ],
      "properties": {
        "ResizeAction": {
          "$ref": "#/definitions/ResizeAction2"
        },
        "AudioCodec": {
          "description": "Gets or sets the encoding audio codec.",
          "$ref": "#/definitions/AudioFormatBase"
        },
        "Preset": {
          "description": "Gets or sets the encoding codec preset.",
          "$ref": "#/definitions/Preset"
        },
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IVideoAction"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "ResizeAction2": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Width",
        "Height",
        "ResizeMode"
      ],
      "properties": {
        "Width": {
          "type": "integer",
          "format": "int32"
        },
        "Height": {
          "type": "integer",
          "format": "int32"
        },
        "ResizeMode": {
          "$ref": "#/definitions/ResizeMode"
        }
      }
    },
    "AudioFormatBase": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "Preset": {
      "type": "string",
      "x-enumNames": [
        "ultrafast",
        "superfast",
        "veryfast",
        "faster",
        "fast",
        "medium",
        "slow",
        "slower"
      ],
      "enum": [
        "ultrafast",
        "superfast",
        "veryfast",
        "faster",
        "fast",
        "medium",
        "slow",
        "slower"
      ],
      "description": ""
    },
    "IVideoAction": {
      "type": "object",
      "additionalProperties": false
    },
    "VideoPresetFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "VideoPresetId"
      ],
      "properties": {
        "VideoPresetId": {
          "type": "string",
          "description": "Id of Squeeze preset.",
          "format": "guid"
        },
        "CustomerId": {
          "type": "string"
        },
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "VideoSpriteFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "MaxNumberOfSprites",
        "Quality"
      ],
      "properties": {
        "SpriteResizeAction": {
          "$ref": "#/definitions/ResizeAction2"
        },
        "MaxNumberOfSprites": {
          "type": "integer",
          "format": "int32"
        },
        "Quality": {
          "type": "integer",
          "format": "int32"
        },
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "VideoStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "PositionInSeconds"
      ],
      "properties": {
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PositionInSeconds": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "AacAudioFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Profile",
        "Coder"
      ],
      "properties": {
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Profile": {
          "description": "Gets or sets the encoding profile.",
          "$ref": "#/definitions/Profile"
        },
        "Coder": {
          "description": "Gets or sets the encoding coder.",
          "$ref": "#/definitions/Coder"
        },
        "Bitrate": {
          "type": "integer",
          "description": "Gets or sets the bitrate of the encoding.",
          "format": "int32"
        },
        "VariableBitRate": {
          "type": "integer",
          "description": "Gets or sets the encoding variable bit rate (VBR) - 1 is lowest quality and 5 is highest quality.",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "Profile": {
      "type": "string",
      "x-enumNames": [
        "aac_low",
        "mpeg2_aac_low",
        "aac_ltp",
        "aac_main"
      ],
      "enum": [
        "aac_low",
        "mpeg2_aac_low",
        "aac_ltp",
        "aac_main"
      ],
      "description": ""
    },
    "Coder": {
      "type": "string",
      "x-enumNames": [
        "twoloop",
        "anmr",
        "fast"
      ],
      "enum": [
        "twoloop",
        "anmr",
        "fast"
      ],
      "description": ""
    },
    "AudioPresetFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "AudioPresetId"
      ],
      "properties": {
        "AudioPresetId": {
          "type": "string",
          "description": "Id of Squeeze preset.",
          "format": "guid"
        },
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "AudioStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "Mp3AudioFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Bitrate": {
          "type": "integer",
          "description": "Gets or sets the encoding bitrate.",
          "format": "int32"
        },
        "Quality": {
          "type": "integer",
          "description": "Gets or sets the encoding quality.\nValues can be set it range of 0 to 9, where a lower value is a higher quality.",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "DocumentFormatBase": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "DocumentStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentFormatBase"
        }
      ]
    },
    "PdfFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "JpegQuality",
        "FastWebView",
        "ReduceFileSize",
        "ExtractFullText"
      ],
      "properties": {
        "JpegQuality": {
          "type": "integer",
          "description": "JpegQuality parameter value must be between 0 and 100.",
          "format": "int32"
        },
        "FastWebView": {
          "type": "boolean"
        },
        "ReduceFileSize": {
          "type": "boolean"
        },
        "DefaultOutputExtension": {
          "type": "string"
        },
        "AllowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ExtractFullText": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentFormatBase"
        }
      ]
    },
    "BaseDoc": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Id": {
          "type": "string"
        },
        "Audit": {
          "$ref": "#/definitions/StoreAudit"
        }
      }
    },
    "StoreAudit": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "CreationDate",
        "ModificationDate"
      ],
      "properties": {
        "CreationDate": {
          "type": "string",
          "format": "date-time"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/UserItem"
        },
        "ModificationDate": {
          "type": "string",
          "format": "date-time"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/UserItem"
        }
      }
    },
    "UserItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Id": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        }
      }
    },
    "CustomerConfigurationItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "UseSsl",
        "ElasticSearchNumberOfShards",
        "ElasticSearchNumberOfReplicas",
        "RootSearchIndexNumberOfShards",
        "RootSearchIndexNumberOfReplicas",
        "RedisDatabaseIndex",
        "LifeCycle"
      ],
      "properties": {
        "Id": {
          "type": "string"
        },
        "Namespace": {
          "type": "string"
        },
        "Alias": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "MainCatalog": {
          "type": "string"
        },
        "MetadataCatalog": {
          "type": "string"
        },
        "StatisticsCatalog": {
          "type": "string"
        },
        "DocumentHistoryCatalog": {
          "type": "string"
        },
        "LiveStreamCatalog": {
          "type": "string"
        },
        "CacheCatalog": {
          "type": "string"
        },
        "WatermarkPath": {
          "type": "string"
        },
        "StoragePath": {
          "type": "string"
        },
        "ContractVersion": {
          "type": "string"
        },
        "CustomerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "UseSsl": {
          "type": "boolean"
        },
        "ExternalProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalProviderItem"
          }
        },
        "ServiceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerServiceProviderItem"
          }
        },
        "SupportContactEmailAddress": {
          "type": "string"
        },
        "BaseUrl": {
          "type": "string"
        },
        "CDNUrl": {
          "type": "string"
        },
        "ElasticSearchNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "ElasticSearchNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "RootSearchIndexNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "RootSearchIndexNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "CorsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NoReplyEmailAddress": {
          "type": "string"
        },
        "LanguageConfiguration": {
          "$ref": "#/definitions/LanguageConfigurationItem"
        },
        "BusinessProcessEngineConnectionString": {
          "type": "string"
        },
        "CreateTransferBusinessProcess": {
          "type": "string"
        },
        "RedisDatabaseIndex": {
          "type": "integer",
          "format": "int32"
        },
        "LifeCycle": {
          "$ref": "#/definitions/LifeCycle"
        },
        "DeactivationMessage": {
          "$ref": "#/definitions/TranslatedStringDictionary"
        }
      }
    },
    "LifeCycle": {
      "type": "string",
      "x-enumNames": [
        "Draft",
        "Active",
        "Inactive",
        "Deleted"
      ],
      "enum": [
        "Draft",
        "Active",
        "Inactive",
        "Deleted"
      ],
      "description": ""
    },
    "TranslatedStringDictionary": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ],
      "description": "A custom dictionary type to distinguish language specific class properties."
    },
    "CustomerUpdateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "LifeCycle",
        "BackupEnabled",
        "CacheRetentionTimeInMinutes",
        "UseSsl"
      ],
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "LifeCycle": {
          "$ref": "#/definitions/LifeCycle"
        },
        "DeactivationMessage": {
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "BackupEnabled": {
          "type": "boolean"
        },
        "CustomerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CacheRetentionTimeInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "UseSsl": {
          "type": "boolean"
        },
        "CDNUrl": {
          "type": "string"
        },
        "SupportContactEmailAddress": {
          "type": "string"
        },
        "CorsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NoReplyEmailAddress": {
          "type": "string"
        }
      }
    },
    "CustomerSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BaseResultOfCustomerViewItem"
        }
      ]
    },
    "BaseResultOfCustomerViewItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "TotalResults"
      ],
      "properties": {
        "TotalResults": {
          "type": "integer",
          "format": "int64"
        },
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerViewItem"
          }
        },
        "PageToken": {
          "type": "string"
        }
      }
    },
    "CustomerViewItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Id": {
          "type": "string"
        },
        "Alias": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "DeactivationComment": {
          "type": "string"
        },
        "CustomerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "MainCatalog": {
          "type": "string"
        },
        "ContractVersion": {
          "type": "string"
        },
        "StoragePath": {
          "type": "string"
        },
        "WatermarkPath": {
          "type": "string"
        }
      }
    },
    "UserViewItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "UserRoleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserItem"
        }
      ]
    },
    "CustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Start",
        "Limit"
      ],
      "properties": {
        "SearchString": {
          "type": "string"
        },
        "Sort": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortInfo"
          }
        },
        "Start": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        },
        "Filter": {
          "$ref": "#/definitions/FilterBase"
        }
      }
    },
    "SortInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Direction"
      ],
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to sort on."
        },
        "Direction": {
          "description": "The sort direction (Asc/Desc).",
          "$ref": "#/definitions/SortDirection"
        }
      }
    },
    "SortDirection": {
      "type": "string",
      "x-enumNames": [
        "Asc",
        "Desc"
      ],
      "enum": [
        "Asc",
        "Desc"
      ],
      "description": ""
    },
    "FilterBase": {
      "type": "object",
      "discriminator": "Kind",
      "additionalProperties": false,
      "required": [
        "Kind"
      ],
      "properties": {
        "Kind": {
          "type": "string"
        }
      },
      "description": "The FilterBase is the base class for all filters."
    },
    "AndFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBase"
          },
          "description": "Accepts all filters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The AndFilter> is a compound filter and returns documents that match all of the specified filters."
    },
    "OrFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBase"
          },
          "description": "Accepts all filters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The OrFilter is a compound filter and returns documents that match any of the specified filters."
    },
    "NotFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Filter": {
          "description": "Limits the result set.",
          "$ref": "#/definitions/FilterBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The NotFilter is a compound filter and returns documents that do not match the specified filter."
    },
    "DateRangeFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "Range": {
          "description": "The date range. Supported pattern: now(+-)(int)(YMDHm).",
          "$ref": "#/definitions/DateRange"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The DateRangeFilter returns documents with fields that have date values within a certain range."
    },
    "DateRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Names": {
          "description": "Tranlsated range names.",
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "From": {
          "type": "string",
          "description": "The from value can be a datetime string or a pattern now(+-)(int)(YMDHm)."
        },
        "To": {
          "type": "string",
          "description": "The to value can be a datetime string or a pattern now(+-)(int)(YMDHm)."
        }
      },
      "description": "The date range class used in aggregators and filters."
    },
    "ExistsFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The ExistsFilter returns documents that have at least one non-null value in the original field."
    },
    "GeoBoundingBoxFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "TopLeft": {
          "description": "The top left longitude/latitude configuration.",
          "$ref": "#/definitions/GeoLocation"
        },
        "BottomRight": {
          "description": "The bottom right longitude/latitude configuration.",
          "$ref": "#/definitions/GeoLocation"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The GeoBoundingBoxFilter returns documents that are found based on a point location using a bounding box."
    },
    "GeoLocation": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Lat",
        "Lon"
      ],
      "properties": {
        "Lat": {
          "type": "number",
          "format": "double"
        },
        "Lon": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GeoDistanceFilter": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Distance"
      ],
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "Location": {
          "description": "The longitude/latitude configuration for the point of origin.",
          "$ref": "#/definitions/GeoLocation"
        },
        "Distance": {
          "type": "number",
          "description": "The range distance in meters.",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The GeoDistanceRangeFilter returns documents that include only hits that exists within a specific distance from a geo point."
    },
    "GeoDistanceRangeFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "Location": {
          "description": "The longitude/latitude configuration for the point of origin.",
          "$ref": "#/definitions/GeoLocation"
        },
        "Range": {
          "description": "The numeric range.",
          "$ref": "#/definitions/NumericRange"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The GeoDistanceRangeFilter returns documents that exists within a range from a specific point."
    },
    "NumericRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Names": {
          "description": "Tranlsated range names.",
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "From": {
          "type": "number",
          "description": "The from value.",
          "format": "double"
        },
        "To": {
          "type": "number",
          "description": "The to value.",
          "format": "double"
        }
      }
    },
    "NestedFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Path": {
          "type": "string",
          "description": "The path pointing to the nested object."
        },
        "Filter": {
          "description": "Limits the result set.",
          "$ref": "#/definitions/FilterBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The NestedFilter is a joining filter and returns documents whose nested objects / documents (see nested mapping) match the specified filter."
    },
    "NumericRangeFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "Range": {
          "description": "The numeric range with from and to properties.",
          "$ref": "#/definitions/NumericRange"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The NumericRangeFilter returns documents with fields that have numeric values within a certain range."
    },
    "PrefixFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "Prefix": {
          "type": "string",
          "description": "The prefix term to filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The PrefixFilter returns documents that have fields containing terms with a specified prefix (not analyzed)."
    },
    "TermFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "Term": {
          "type": "string",
          "description": "The term to filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The TermFilter returns documents that contain the exact term specified in the inverted index."
    },
    "TermsFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "Terms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of OR combined terms."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The TermsFilter returns documents that have fields that match any of the provided terms (not analyzed)."
    },
    "AggregationFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AggregationName": {
          "type": "string",
          "description": "The name of the aggregation this filter is connected to."
        },
        "Filter": {
          "description": "The aggregation filter property. Available filters are TermFilter, DateRangeFilter, NumericRangeFilter and GeoDistanceRangeFilter.",
          "$ref": "#/definitions/FilterBase"
        },
        "TemporaryAggregatorRequestId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "An AggregationFilter is provided with each aggregated value. When selecting the aggregated value the aggregation filter is added to the search query and returns doucments meeting the aggregation condition."
    },
    "ChildFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ChildType": {
          "type": "string",
          "description": "The elastic search index type to filter as a child."
        },
        "Filter": {
          "description": "The filter to apply on the child entity. It accepts all filters.",
          "$ref": "#/definitions/FilterBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The ChildFilter allows to apply filters on child documents and returns documents that match the specified filter on the child document."
    },
    "ParentFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ParentType": {
          "type": "string",
          "description": "The elastic search index type to filter as a parent."
        },
        "Filter": {
          "description": "The filter to apply on the child entity. It accepts all filters.",
          "$ref": "#/definitions/FilterBase"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ],
      "description": "The ParentFilter allows to apply filters on parent documents and returns documents that match the specified filter on the parent document."
    },
    "NodeInfoDoc": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "LastResponseTime"
      ],
      "properties": {
        "Id": {
          "type": "string"
        },
        "HostName": {
          "type": "string"
        },
        "LastResponseTime": {
          "type": "string",
          "format": "date-time"
        },
        "ServiceName": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "VersionInfo": {
          "type": "string"
        },
        "Release": {
          "type": "string"
        },
        "LogLevel": {
          "type": "string"
        }
      }
    },
    "UpdateInfoViewItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "CreationDate"
      ],
      "properties": {
        "UpdateVersion": {
          "type": "string",
          "description": "The version of the update command."
        },
        "ObjectStoreVersion": {
          "type": "string",
          "description": "The version of the object store (elastic search) at the time of the update command creation."
        },
        "CreationDate": {
          "type": "string",
          "description": "The creation date of the update command.",
          "format": "date-time"
        },
        "Description": {
          "type": "string",
          "description": "The description of the update command."
        },
        "Creator": {
          "type": "string",
          "description": "The creator of the update command."
        }
      },
      "description": "The UpdateInfoViewItem is the view item for update commands."
    },
    "VersionInfoViewItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "FileVersion": {
          "type": "string",
          "description": "The manual file version of Picturepark.Contract.dll."
        },
        "FileProductVersion": {
          "type": "string",
          "description": "The GitVersionTask generated file product version of Picturepark.Configuration.dll."
        },
        "ContractVersion": {
          "type": "string",
          "description": "The current contract version stored in CustomerDoc / EnvironmentDoc."
        },
        "Release": {
          "type": "string",
          "description": "The bamboo release version. Only provided on bamboo deployments."
        }
      },
      "description": "The version view item for the environment."
    },
    "ReactivationEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false
    },
    "DeactivationEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DeactivationMessage": {
          "description": "Language specific deactivation messages.",
          "$ref": "#/definitions/TranslatedStringDictionary"
        }
      }
    },
    "UpdateEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "CreateSnapshot"
      ],
      "properties": {
        "TargetVersion": {
          "type": "string",
          "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the environments's contract version will be raised to the highest available update version."
        },
        "CreateSnapshot": {
          "type": "boolean"
        }
      }
    },
    "CustomerVersionInfoViewItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomerId": {
          "type": "string",
          "description": "The customer id."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VersionInfoViewItem"
        }
      ],
      "description": "The version view item for the customer."
    },
    "ReactivationCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomerId": {
          "type": "string",
          "description": "The customer id."
        }
      }
    },
    "DeactivationCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomerId": {
          "type": "string",
          "description": "The customer id."
        },
        "DeactivationMessage": {
          "description": "Language specific deactivation messages.",
          "$ref": "#/definitions/TranslatedStringDictionary"
        }
      }
    },
    "UpdateCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "CreateSnapshot"
      ],
      "properties": {
        "TargetVersion": {
          "type": "string",
          "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the customer's contract version will be raised to the highest available update version."
        },
        "CustomerId": {
          "type": "string",
          "description": "The customer id."
        },
        "CreateSnapshot": {
          "type": "boolean",
          "description": "Creates a snapshot of the customer's indices prior to an update.\nExcluded from the snapshot are livestream and documenthistory indices as well as search indices other than the root search index."
        }
      }
    },
    "SnapshotRepositoryCustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomerAlias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotRepositoryBaseCreateRequest"
        }
      ]
    },
    "SnapshotRepositoryBaseCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RepositoryName": {
          "type": "string"
        }
      }
    },
    "SnapshotRepositoryViewItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "EntityType"
      ],
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "EntityId": {
          "type": "string"
        },
        "EntityType": {
          "$ref": "#/definitions/BackupEntityType"
        }
      }
    },
    "BackupEntityType": {
      "type": "string",
      "x-enumNames": [
        "Enviroment",
        "Customer"
      ],
      "enum": [
        "Enviroment",
        "Customer"
      ],
      "description": ""
    },
    "SnapshotCustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomerAlias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseCreateRequest"
        }
      ]
    },
    "SnapshotBaseCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Reason"
      ],
      "properties": {
        "SnapshotName": {
          "type": "string",
          "description": "The SnapshotName. Must be unique.\nThe name usually will be enriched with Reason, ContractVersion and DateTime information."
        },
        "RepositoryName": {
          "type": "string",
          "description": "The Repository in which the snapshot will be created."
        },
        "Indices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Indices being part of the snapshot."
        },
        "Reason": {
          "description": "The snapshot backup reason will be added to the snapshot name.",
          "$ref": "#/definitions/BackupReason"
        }
      }
    },
    "BackupReason": {
      "type": "string",
      "x-enumNames": [
        "Custom",
        "Update",
        "Deletion"
      ],
      "enum": [
        "Custom",
        "Update",
        "Deletion"
      ],
      "description": ""
    },
    "SnapshotViewItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "DurationInMilliseconds",
        "EndTime",
        "EndTimeInMilliseconds",
        "StartTime",
        "StartTimeInMilliseconds",
        "EntityType",
        "RestoreDate"
      ],
      "properties": {
        "DurationInMilliseconds": {
          "type": "integer",
          "description": "The snapshot creation DurationInMilliseconds.",
          "format": "int64"
        },
        "EndTime": {
          "type": "string",
          "description": "The snapshot EndTime.",
          "format": "date-time"
        },
        "EndTimeInMilliseconds": {
          "type": "integer",
          "description": "The snapshot EndTimeInMilliseconds.",
          "format": "int64"
        },
        "Failures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SnapshotShardFailure"
          },
          "description": "The snapshot elastic search shard Falures."
        },
        "Indices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The snapshot Indices."
        },
        "Name": {
          "type": "string",
          "description": "The snapshot Name."
        },
        "RepositoryName": {
          "type": "string",
          "description": "The repository name."
        },
        "StartTime": {
          "type": "string",
          "description": "The snapshot StartTime.",
          "format": "date-time"
        },
        "StartTimeInMilliseconds": {
          "type": "integer",
          "description": "The snapshot StartTimeInMilliseconds.",
          "format": "int64"
        },
        "State": {
          "type": "string",
          "description": "The snapshot State."
        },
        "EntityId": {
          "type": "string"
        },
        "EntityType": {
          "$ref": "#/definitions/BackupEntityType"
        },
        "RestoreDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SnapshotShardFailure": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Index": {
          "type": "string",
          "description": "The Index having the shard failure."
        },
        "NodeId": {
          "type": "string",
          "description": "The elastic search NodeId."
        },
        "Reason": {
          "type": "string",
          "description": "The elastic serach shard failure Reason."
        },
        "ShardId": {
          "type": "string",
          "description": "The failing elastic search ShardId."
        },
        "Status": {
          "type": "string",
          "description": "The snapshot failure status."
        }
      }
    },
    "SnapshotCustomerRestoreRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomerAlias": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseRestoreRequest"
        }
      ]
    },
    "SnapshotBaseRestoreRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SnapshotName": {
          "type": "string"
        },
        "RepositoryName": {
          "type": "string"
        },
        "Indices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SnapshotRestoreViewItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "RestoreDate"
      ],
      "properties": {
        "RestoreDate": {
          "type": "string",
          "format": "date-time"
        },
        "RepositoryName": {
          "type": "string"
        },
        "SnapshotName": {
          "type": "string"
        },
        "Indices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SnapshotRepositoryEnvironmentCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotRepositoryBaseCreateRequest"
        }
      ]
    },
    "SnapshotEnvironmentCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseCreateRequest"
        }
      ]
    },
    "SnapshotEnvironmentRestoreRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseRestoreRequest"
        }
      ]
    },
    "SnapshotCustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Start",
        "Limit"
      ],
      "properties": {
        "SearchString": {
          "type": "string"
        },
        "Sort": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortInfo"
          }
        },
        "Start": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        },
        "RepositoryNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomerAlias": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        }
      }
    },
    "SnapshotCustomerSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ElapsedMilliseconds"
      ],
      "properties": {
        "ElapsedMilliseconds": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseResultOfSnapshotViewItem"
        }
      ]
    },
    "BaseResultOfSnapshotViewItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "TotalResults"
      ],
      "properties": {
        "TotalResults": {
          "type": "integer",
          "format": "int64"
        },
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SnapshotViewItem"
          }
        },
        "PageToken": {
          "type": "string"
        }
      }
    },
    "SnapshotRepositoryCustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerAlias": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {}
}