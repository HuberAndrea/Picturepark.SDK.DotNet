//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v9.10.6277.19641 (NJsonSchema v8.9.6275.22295) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace Picturepark.SDK.V1.ServiceProvider.Contract
{
    #pragma warning disable // Disable all warnings

    
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class SendMessageRequest 
    {
        [Newtonsoft.Json.JsonProperty("MessageName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MessageName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessProcessId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BusinessProcessId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Variables", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Variables { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SendMessageRequest FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SendMessageRequest>(data);
        }
    }
    
    [Newtonsoft.Json.JsonConverter(typeof(JsonInheritanceConverter), "Kind")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class PictureparkException : System.Exception
    {
        [Newtonsoft.Json.JsonProperty("TraceLevel", Required = Newtonsoft.Json.Required.Always)]
        public TraceLevel TraceLevel { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TraceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TraceId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TraceJobId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TraceJobId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("HttpStatusCode", Required = Newtonsoft.Json.Required.Always)]
        public int HttpStatusCode { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PictureparkException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PictureparkException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public enum TraceLevel
    {
        Critical = 1,
    
        Error = 2,
    
        Warning = 3,
    
        Information = 4,
    
        Verbose = 5,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class PictureparkBusinessException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("CustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PictureparkBusinessException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PictureparkBusinessException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class PictureparkApplicationException : PictureparkBusinessException
    {
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PictureparkApplicationException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PictureparkApplicationException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class PictureparkArgumentNullException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("ArgumentName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ArgumentName { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PictureparkArgumentNullException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PictureparkArgumentNullException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class AssetNotFoundException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("AssetId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AssetId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AssetNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AssetNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class BusinessProcessDefinitionCreateException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("ProcessDefinitionIds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> ProcessDefinitionIds { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessProcessDefinitionCreateException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessProcessDefinitionCreateException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class BusinessProcessDefinitionNotFoundException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("ProcessDefinitionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProcessDefinitionId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessProcessDefinitionNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessProcessDefinitionNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class BusinessProcessNotFoundException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("BusinessProcessId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BusinessProcessId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessProcessNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessProcessNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class CustomerHostNotFoundException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("HostName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string HostName { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerHostNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerHostNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class CustomerNotFoundException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("CustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class DocumentNotFoundException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("DocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DocumentId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DocumentNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DocumentNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class DocumentVersionNotFoundException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("DocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DocumentId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocumentVersion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DocumentVersion { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DocumentVersionNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DocumentVersionNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class DriveRequestException : PictureparkBusinessException
    {
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DriveRequestException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DriveRequestException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class DuplicateRightException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("PermissionSetId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PermissionSetId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DuplicateRightException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DuplicateRightException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class DuplicateDocumentException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("DocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DocumentId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocumentType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DocumentType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DuplicateDocumentException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DuplicateDocumentException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class DuplicateAggregatorException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("AggregatorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AggregatorName { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DuplicateAggregatorException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DuplicateAggregatorException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class FailedToLockException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("ResourceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ResourceId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FailedToLockException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FailedToLockException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class IndexException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("IndexName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IndexName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebugInformation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DebugInformation { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static IndexException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<IndexException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class InvalidArgumentException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("ArgumentName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ArgumentName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ArgumentValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ArgumentValue { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvalidArgumentException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvalidArgumentException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class InvalidCustomerException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("CustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvalidCustomerException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvalidCustomerException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class PictureparkInvalidMetadataException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("MetadataErrors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<MetadataError> MetadataErrors { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PictureparkInvalidMetadataException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PictureparkInvalidMetadataException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class MetadataError 
    {
        [Newtonsoft.Json.JsonProperty("ErrorType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ErrorType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNumber", Required = Newtonsoft.Json.Required.Always)]
        public int LineNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LinePosition", Required = Newtonsoft.Json.Required.Always)]
        public int LinePosition { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Path", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Path { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Message { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SchemaId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SchemaId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static MetadataError FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<MetadataError>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class InvalidStateException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("ResourceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ResourceId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("State", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string State { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvalidStateException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvalidStateException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class InvalidStateTransitionException : InvalidStateException
    {
        [Newtonsoft.Json.JsonProperty("Transition", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Transition { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvalidStateTransitionException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvalidStateTransitionException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class InvalidUserOrPasswordException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("CustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvalidUserOrPasswordException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvalidUserOrPasswordException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class PictureparkMappingException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("IndexName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IndexName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebugInformation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DebugInformation { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PictureparkMappingException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PictureparkMappingException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class MessagePerformerTaskCanceledException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("MessageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MessageId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static MessagePerformerTaskCanceledException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<MessagePerformerTaskCanceledException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class NotFoundException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("Reference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reference { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static NotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<NotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class ObjectStoreException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("RowErrorMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RowErrorMessages { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ErrorMessage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ErrorMessage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Message { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ObjectStoreException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ObjectStoreException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class ObjectStoreResponseException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("RowErrorMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RowErrorMessages { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Message { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ObjectStoreResponseException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ObjectStoreResponseException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class PictureparkOperationCanceledException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("CancellationToken", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CancellationToken { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PictureparkOperationCanceledException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PictureparkOperationCanceledException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class OperationTimeoutException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("MessageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MessageId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OperationTimeoutException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationTimeoutException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class OutputNotFoundException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("AssetId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AssetId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OutputFormatId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OutputFormatId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OutputNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OutputNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class PermissionException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("Permission", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Permission { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Operation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Operation { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PermissionException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PermissionException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class QueryException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("DebugInformation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DebugInformation { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static QueryException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<QueryException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class RenderingException : PictureparkBusinessException
    {
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static RenderingException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<RenderingException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class RenderingJobItemNotSetException : PictureparkBusinessException
    {
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static RenderingJobItemNotSetException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<RenderingJobItemNotSetException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class ServiceProviderCreateException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("UserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExternalId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExternalId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VirtualHost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VirtualHost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DetailErrorMessage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DetailErrorMessage { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ServiceProviderCreateException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ServiceProviderCreateException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class ServiceProviderDeleteException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("ServiceProviderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ServiceProviderId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DetailedErrorMessage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DetailedErrorMessage { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ServiceProviderDeleteException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ServiceProviderDeleteException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class ServiceProviderNotFoundException : PictureparkException
    {
        [Newtonsoft.Json.JsonProperty("MissingServiceProviderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MissingServiceProviderId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ServiceProviderNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ServiceProviderNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class TokenValidationException : PictureparkBusinessException
    {
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TokenValidationException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TokenValidationException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class UnknownException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("ExceptionDetail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExceptionDetail { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UnknownException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UnknownException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class UserNotFoundException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("MissingUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MissingUserId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UserNotFoundException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserNotFoundException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class UserPermanentlyRemovedException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("RemovedUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RemovedUserId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UserPermanentlyRemovedException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserPermanentlyRemovedException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class UserRoleAssignedException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("UserRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserRoleId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UserRoleAssignedException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserRoleAssignedException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class UserRolesRightsAssignedException : PictureparkBusinessException
    {
        [Newtonsoft.Json.JsonProperty("AssetPermissionSetId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AssetPermissionSetId { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UserRolesRightsAssignedException FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserRolesRightsAssignedException>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class CustomerServiceProviderConfigurationViewItem 
    {
        [Newtonsoft.Json.JsonProperty("ServiceProviderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ServiceProviderId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UserRoleIds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> UserRoleIds { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Settings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Settings { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerServiceProviderConfigurationViewItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerServiceProviderConfigurationViewItem>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    public partial class ServiceProviderConfigurationUpdateRequest 
    {
        [Newtonsoft.Json.JsonProperty("CustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomerId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ServiceProviderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ServiceProviderId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Settings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Settings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UserRoleIds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> UserRoleIds { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ServiceProviderConfigurationUpdateRequest FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ServiceProviderConfigurationUpdateRequest>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "8.9.6275.22295")]
    internal class JsonInheritanceConverter : Newtonsoft.Json.JsonConverter
    {
        internal static readonly string DefaultDiscriminatorName = "discriminator";
    
        private readonly string _discriminator;
            
        [System.ThreadStatic]
        private static bool _isReading;
    
        [System.ThreadStatic]
        private static bool _isWriting;
    
        public JsonInheritanceConverter()
        {
            _discriminator = DefaultDiscriminatorName;
        }
    
        public JsonInheritanceConverter(string discriminator)
        {
            _discriminator = discriminator;
        }
    
        public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
        {
            try
            {
                _isWriting = true;
    
                var jObject = Newtonsoft.Json.Linq.JObject.FromObject(value, serializer);
                jObject.AddFirst(new Newtonsoft.Json.Linq.JProperty(_discriminator, value.GetType().Name));
                writer.WriteToken(jObject.CreateReader());
            }
            finally
            {
                _isWriting = false;
            }
        }
    
        public override bool CanWrite
        {
            get
            {
                if (_isWriting)
                {
                    _isWriting = false;
                    return false; 
                }
                return true;
            }
        }
    
        public override bool CanRead
        {
            get
            {
                if (_isReading)
                {
                    _isReading = false;
                    return false;
                }
                return true;
            }
        }
    
        public override bool CanConvert(System.Type objectType)
        {
            return true;
        }
    
        public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
        {
            var jObject = serializer.Deserialize<Newtonsoft.Json.Linq.JObject>(reader);
            var discriminator = Newtonsoft.Json.Linq.Extensions.Value<string>(jObject.GetValue(_discriminator));
            var subtype = GetObjectSubtype(objectType, discriminator);
    
            try
            {
                _isReading = true;
                return serializer.Deserialize(jObject.CreateReader(), subtype);
            }
            finally
            {
                _isReading = false;
            }
        }
    
        private System.Type GetObjectSubtype(System.Type objectType, string discriminator)
        {
            var objectTypeInfo = System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType);
            var customAttributes = System.Reflection.CustomAttributeExtensions.GetCustomAttributes(objectTypeInfo);
    
            var knownTypeAttributes = System.Linq.Enumerable.Where(customAttributes, a => a.GetType().Name == "KnownTypeAttribute");
            dynamic knownTypeAttribute = System.Linq.Enumerable.SingleOrDefault(knownTypeAttributes, a => IsKnwonTypeTargetType(a, discriminator));
            if (knownTypeAttribute != null)
                return knownTypeAttribute.Type;
            
            var typeName = objectType.Namespace + "." + discriminator;
            return System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType).Assembly.GetType(typeName);
        }
    
        private bool IsKnwonTypeTargetType(dynamic attribute, string discriminator)
        {
            return attribute?.Type.Name == discriminator;
        }
    }



    [System.CodeDom.Compiler.GeneratedCode("NSwag", "9.10.6277.19641")]
    public class ApiException : System.Exception
    {
        public string StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, string statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException) 
            : base(message, innerException)
        {
            StatusCode = statusCode;
            Response = response; 
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "9.10.6277.19641")]
    public class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, string statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException) 
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }


}